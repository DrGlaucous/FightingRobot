cmake_minimum_required(VERSION 3.10)


# set the project name
project(VSWorkspace VERSION 1.0)

# specify the C++ standard
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED True)



#options
option(STATIC_CRT "Use static CRT libraries" ON)


# add the executable
add_executable(VSWorkspace
  "src/main.cpp"
)



# put the final executable in the bin directory for ease of access
set_target_properties(VSWorkspace PROPERTIES
  RUNTIME_OUTPUT_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}/bin"

  #Force strict C90
  C_STANDARD 90
  C_STANDARD_REQUIRED ON
  C_EXTENSIONS OFF

)

# make the libraries statically linked
target_link_options(VSWorkspace PRIVATE "-static")


# MSVC changes
if(MSVC)
  # remove the warnings when using non-"_s" functions
  target_compile_definitions(VSWorkspace PRIVATE _CRT_SECURE_NO_WARNINGS)

  # source files are recongnized as /utf-8
  target_compile_options(VSWorkspace PRIVATE "/utf-8")

  # statically-link the CRT (so MSVC dlls are not required to run the program)
  #this currently causes buld issues to happen, so I'm commenting it out.
  foreach(flag_var CMAKE_C_FLAGS CMAKE_C_FLAGS_DEBUG CMAKE_C_FLAGS_RELEASE CMAKE_C_FLAGS_MINSIZEREL CMAKE_C_FLAGS_RELWITHDEBINFO CMAKE_CXX_FLAGS CMAKE_CXX_FLAGS_DEBUG CMAKE_CXX_FLAGS_RELEASE CMAKE_CXX_FLAGS_MINSIZEREL CMAKE_CXX_FLAGS_RELWITHDEBINFO)
    if(${flag_var} MATCHES "/MD")
      string(REGEX REPLACE "/MD" "/MT" ${flag_var} "${${flag_var}}")
    endif()
  endforeach()


endif()